// Code generated by tygo. DO NOT EDIT.

import { TextInput } from "@/components/forms/text-input";
import { Button } from "@/components/ui/button";
import { Form } from "@/components/ui/form";
import { useMutation } from "@tanstack/react-query";
import { useForm } from "react-hook-form";
import { handleResponseError } from "./fetcher";

import { createUser, CreateUserRequest } from "./api";
export const CreateUserRequestForm = () => {
  const form = useForm<CreateUserRequest>({});

  const createUserMutation = useMutation({
    mutationFn: async ({
      data,
      id,
    }: {
      data: CreateUserRequest;
      id: string;
    }) => {
      return createUser(data, id).then(([res, err]) => {
        if (res) {
        }
        if (err) {
          handleResponseError(err, form);
        }
      });
    },
  });

  const onSubmit = form.handleSubmit((data) => {
    createUserMutation.mutate({ data });
  });

  return (
    <Form {...form}>
      <form onSubmit={onSubmit} className="grid grid-cols-1 lg:grid-cols-2">
        <TextInput control={form.control} name={""} label="" />
        <TextInput control={form.control} type={"number"} name={""} label="" />
        <Button
          variant="outline"
          loading={createUserMutation.isPending}
          className="w-full col-span-2"
        >
          Submit
        </Button>
      </form>
    </Form>
  );
};
